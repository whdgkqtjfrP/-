# -*- coding: utf-8 -*-
"""watcher_script2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l9Aw386o7AMAZFDKsGKRQO3bMKscmyTd
"""

import time
import subprocess
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

# 감시 대상 디렉토리 및 설정
WATCH_DIRECTORY = "/app/shared/traffic_data"
FILE_EXTENSION = ".pcap"
PREPROCESS_SCRIPT = "preprocessandinput.py"

# 감지된 .pcap 파일을 처리하는 핸들러
class PcapHandler(FileSystemEventHandler):
    def on_created(self, event):
        if not event.is_directory and event.src_path.endswith(FILE_EXTENSION):
            print(f"감지된 파일 : {event.src_path}")
            try:
                subprocess.run(["python3", PREPROCESS_SCRIPT, event.src_path], check=True)
                print("전처리 완료\n")
            except subprocess.CalledProcessError as e:
                print(f"전처리 실패 : {e}")

if __name__ == "__main__":
    print(f"디렉토리 감시 시작 : {WATCH_DIRECTORY}")

    # collector.py 자동 실행
    subprocess.Popen(["python3", "/app/shared/collector.py"])
    print("트래픽 수집기 실행 중...")

    # watchdog 감시 시작
    event_handler = PcapHandler()
    observer = Observer()
    observer.schedule(event_handler, path=WATCH_DIRECTORY, recursive=False)
    observer.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
        print("\n감시 중단됨")
    observer.join()