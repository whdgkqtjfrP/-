# -*- coding: utf-8 -*-
"""auto_syn_loop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l9Aw386o7AMAZFDKsGKRQO3bMKscmyTd
"""

import os
import time
import subprocess
from datetime import datetime

# 설정값 정의
INTERVAL = 120  # 비정상 패킷 수집 시간 (초)
TARGET_IP = "172.17.0.2"  # 공격 대상 IP = attacker2
DEST_HOST = "capdes2@203.253.145.74"
DEST_PATH = "/home/capdes2/traffic_data"
PACKET_COUNT = 1000  # 생성할 SYN 패킷 수

print("비정상 SYN 트래픽 생성 및 수집 시스템 시작됨")

while True:
    # 타임스탬프 기반 파일명 생성
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    pcap_file = f"synflood_{timestamp}.pcap"

    print(f"[{timestamp}] 비정상 SYN 트래픽 생성 시작")
    # hping3를 사용한 SYN-only 트래픽 생성
    subprocess.Popen(
        ["hping3", "-S", TARGET_IP, "-p", "80", "-c", str(PACKET_COUNT)],
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL
    )

    # 지정된 시간 동안 tcpdump로 SYN-only 패킷 수집
    print(f"[{timestamp}] SYN 패킷 필터링하여 수집 중")
    subprocess.run(
        ["timeout", str(INTERVAL), "tcpdump", "-i", "any", "-w", pcap_file,
         f"tcp[tcpflags] & tcp-syn != 0 and tcp[tcpflags] & tcp-ack == 0", "and", "src", "host", TARGET_IP]
    )

    print(f"[{timestamp}] 패킷 수집 완료: {pcap_file}")

    # capdes2로 전송 (scp 이용)
    result = subprocess.run(
        ["scp", "-P", "6304", pcap_file, f"{DEST_HOST}:{DEST_PATH}/"]
    )

    if result.returncode == 0:
        print("전송 성공 = 로컬 파일 삭제")
        os.remove(pcap_file)
    else:
        print("전송 실패 = 로컬 파일 보존됨")

    print("다음 주기까지 대기 중...\n")
    time.sleep(INTERVAL)