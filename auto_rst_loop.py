# -*- coding: utf-8 -*-
"""auto_rst_loop.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1l9Aw386o7AMAZFDKsGKRQO3bMKscmyTd
"""

import os
import time
import subprocess
from datetime import datetime

# 설정값 정의
INTERVAL = 120  # 패킷 수집 시간 (초)
TARGET_IP = "172.17.0.2"  # 공격 대상 IP (자기 자신)
DEST_HOST = "capdes2@203.253.145.74"  # 전송 대상 호스트
DEST_PATH = "/home/capdes2/traffic_data"  # 저장 경로
PACKET_COUNT = 1000  # 생성할 ACK 패킷 수

print("비정상 RST 자동 생성 및 수집 시스템 시작됨")

while True:
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    pcap_file = f"rstflood_{timestamp}.pcap"

    print(f"[{timestamp}] 비정상 RST 트래픽 생성 시작")
    subprocess.Popen(
        ["hping3", "-R", TARGET_IP, "-p", "80", "-c", str(PACKET_COUNT)],
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL
    )

    subprocess.run(
        ["timeout", str(INTERVAL), "tcpdump", "-i", "any", "-w", pcap_file,
         "tcp[tcpflags] & tcp-rst != 0", "and", "src", "host", TARGET_IP],
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL
    )

    print(f"[{timestamp}] 패킷 수집 완료: {pcap_file}")

    result = subprocess.run(
        ["scp", "-P", "6304", pcap_file, f"{DEST_HOST}:{DEST_PATH}/"]
    )

    if result.returncode == 0:
        print("전송 성공 → 로컬 파일 삭제")
        os.remove(pcap_file)
    else:
        print("전송 실패 → 로컬 파일 보존됨")

    print("다음 주기까지 대기 중...\n")
    time.sleep(INTERVAL)